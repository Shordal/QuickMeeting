{"version":3,"sources":["images/OTS-Banner.svg","images/TomballBanner.png","images/LSCT-CollegeRelations-Banner.svg","images/LSCT-StudentLife-Banner.svg","serviceWorker.js","reducers/notes.js","reducers/visability.js","context/quick-context.js","components/Note.js","components/NoteList.js","components/addNoteForm.js","selectors/Banner.js","reducers/banner.js","index.js","components/QuickMeeting.js"],"names":["module","exports","Boolean","window","location","hostname","match","notesReducer","state","action","type","notes","title","body","filter","note","hideContentReducer","visable","QuickContext","React","createContext","Note","dispatch","useContext","useEffect","className","onClick","NoteList","map","key","AddNoteForm","setVisable","useState","setTitle","setBody","setVisableToggle","onSubmit","e","preventDefault","value","onChange","target","placeholder","setTimeout","scrollTo","left","top","document","scrollHeight","behavior","BannerSelector","banner","setBanner","useReducer","bannerVisable","setBannerVisable","setBannerMenuVisableHide","src","alt","OTSBanner","TomballSL","TomballCR","bannerReducer","tommballBanner","ReactDOM","render","fs","useFullScreen","JSON","parse","localStorage","getItem","setItem","stringify","Provider","toggle","fullScreen","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.235a7a3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/OTS-Banner.a81e6ec6.svg\";","module.exports = __webpack_public_path__ + \"static/media/TomballBanner.cacbaa55.png\";","module.exports = __webpack_public_path__ + \"static/media/LSCT-CollegeRelations-Banner.810af182.svg\";","module.exports = __webpack_public_path__ + \"static/media/LSCT-StudentLife-Banner.ce23f183.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const notesReducer = (state, action) => {\n    switch (action.type) {\n        case 'POPULATE_NOTES':\n            return action.notes\n        case 'ADD_NOTE':\n            return [\n                // coppies the exsisting objects to the array\n                ...state,\n                // below adds an object with the title and body of a note\n                { title: action.title, body: action.body }\n            ]\n        case 'REMOVE_NOTE':\n            return state.filter((note) => note.title !== action.title)\n        default:\n            return state\n    }\n}\nexport { notesReducer as default }","const hideContentReducer = (state, action) => {\n    switch (action.type) {\n        case 'SHOW':\n            return action.visable = true\n        case 'TOGGLE':\n            return action.visable ? false : true\n        case 'SHOW_BANNER':\n            return action.visable = true\n        case 'HIDE_BANNER':\n            return action.visable = false\n        case 'TOGGLE_BANNER':\n            return action.visable ? false : true\n        default:\n            return state\n    }\n};\nexport { hideContentReducer as default };","import React from 'react';\nconst QuickContext = React.createContext();\nexport { QuickContext as default };","import React, { useEffect, useContext } from 'react';\nimport '../index.css'\nimport QuickContext from '../context/quick-context';\nconst Note = ({ note }) => {\n    const { dispatch } = useContext(QuickContext);\n    useEffect(() => {\n        return () => {\n        }\n    }, [])\n    return (\n        <div className=\"NoteApp-note\">\n            <h3 className=\"NoteApp-note-text\">{ note.title }</h3>\n            <p className=\"NoteApp-note-text\">{ note.body }</p>\n            <button className=\"Button__body\" onClick={() => dispatch({ \n                type: 'REMOVE_NOTE', \n                title: note.title\n            })}>X</button>\n        </div>\n    )\n};\nexport { Note as default };","import React, { useContext } from 'react';\nimport Note from './Note';\nimport QuickContext from '../context/quick-context';\nconst NoteList = () => {\n    const { notes } = useContext(QuickContext);\n    return notes.map((note) => (\n        <Note key={ note.title } note={ note }/>\n    ))\n};\nexport { NoteList as default };","import React, { useState, useContext } from 'react';\nimport '../index.css'\nimport QuickContext from '../context/quick-context';\nconst AddNoteForm = () => {\n    const { dispatch, visable, setVisable } = useContext(QuickContext);\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const setVisableToggle = (visable) => {\n        setVisable({\n            type: 'TOGGLE',\n            visable\n        })\n    };\n    const addNote = (e) => {\n        e.preventDefault()\n        dispatch({\n            type: 'ADD_NOTE',\n            title,\n            body\n        })\n        setTitle('')\n        setBody('')\n    };\n    const scrollToBottom = () => {\n        setTimeout(function () {\n            window.scrollTo({\n                left: 0,\n                top: document.body.scrollHeight + 268,\n                behavior: \"smooth\"\n            });\n        }, 2);\n    }\n    return (\n        <div className={\"NoteApp-hide\"}>\n            {visable &&\n                <p className={\"NoteApp-inputheader\"}>Add Content</p>\n            }\n            {visable &&\n                <form className=\"NoteApp-inputcontainer\" onSubmit={addNote}>\n                    <input className=\"NoteApp-input\" value={title} onChange={(e) =>\n                        setTitle(e.target.value)}\n                        placeholder=\"Title\"\n                    />\n                    <textarea className=\"NoteApp-input\" value={body} onChange={(e) =>\n                        setBody(e.target.value)}\n                        placeholder=\"Body\"\n                    />\n                    <div className=\"Button__center\">\n                        <button className=\"Button\" onClick={() => {\n                            setVisableToggle(visable)\n                        }}>{visable ? 'Hide' : 'Show'}</button>\n                        <button className=\"Button\">Add Content</button>\n                    </div>\n                </form>\n            }\n            <div className=\"NoteApp-bottom\">\n                {!visable &&\n                    <div className=\"NoteApp-hide\">\n                        <button className=\"Button\" onClick={() => {\n                            setVisableToggle(visable)\n                            scrollToBottom()\n                        }}>{visable ? 'Hide' : 'Add Content'}</button>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n};\nexport { AddNoteForm as default };","import React, { useContext, useReducer } from 'react';\nimport '../index.css'\nimport '../Styles/component/banner.css'\nimport QuickContext from '../context/quick-context';\nimport hideContentReducer from '../reducers/visability';\nimport { OTSBanner, TomballCR, TomballSL } from '../Banners/Banners';\nconst BannerSelector = () => {\n    const { banner, setBanner } = useContext(QuickContext);\n    const [bannerVisable, setBannerVisable] = useReducer(hideContentReducer, false)\n    const tomballBannerCollegeRelations = () => {\n        setBanner({\n            type: 'TOMBALLCR'\n        })\n    }\n    const tomballBannerStudentLife = () => {\n        setBanner({\n            type: 'TOMBALLSL'\n        })\n    }\n    const otsBanner = () => {\n        setBanner({\n            type: 'OTS'\n        })\n    }\n    const setBannerMenuVisableHide = (visable) => {\n        setBannerVisable({\n            type: 'HIDE_BANNER',\n            visable\n        })\n    }\n    const setBannerMenuVisableToggle = (visable) => {\n        setBannerVisable({\n            type: 'TOGGLE_BANNER',\n            visable\n        })\n    }\n    return (\n        <div className=\"NoteApp\">\n            <img src={banner} className=\"App-logo\" alt=\"banner\" onClick={() => {\n                setBannerMenuVisableToggle(bannerVisable)\n            }} />\n            {bannerVisable &&\n                <div className=\"BannerMenu\">\n                    <img src={OTSBanner} className='Select-banner-OTS' alt='OTSBanner' onClick={() => {\n                        setBannerMenuVisableHide()\n                        otsBanner()\n                    }} />\n                    <img src={TomballSL} className='Select-banner-TomballSL' alt='TomballSL' onClick={() => {\n                        setBannerMenuVisableHide()\n                        tomballBannerStudentLife()\n                    }} />\n                    <img src={TomballCR} className='Select-banner-TomballCR' alt='TomballCR' onClick={() => {\n                        setBannerMenuVisableHide()\n                        tomballBannerCollegeRelations()\n                    }} />\n                </div>\n            }\n        </div>\n    )\n}\nexport { BannerSelector as default };","import tommballBanner from '../images/TomballBanner.png';\nimport OTSBanner from '../images/OTS-Banner.svg';\nimport TomballCR from '../images/LSCT-CollegeRelations-Banner.svg';\nimport TomballSL from '../images/LSCT-StudentLife-Banner.svg'\n\nconst bannerReducer = (state, action) => {\n    switch (action.type) {\n        case 'OTS':\n            return action.banner = OTSBanner\n        case 'TOMBALL':\n            return action.banner = tommballBanner\n        case 'TOMBALLCR':\n            return action.banner = TomballCR\n        case 'TOMBALLSL':\n            return action.banner = TomballSL\n        default:\n            return state\n    }\n};\nexport { bannerReducer as default };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport QuickMeeting from './components/QuickMeeting';\nReactDOM.render(<QuickMeeting />, document.getElementById('root'));\nserviceWorker.unregister();\n","import React, { useEffect, useReducer } from 'react';\nimport '../index.css'\nimport OTSBanner from 'images/OTS-Banner.svg';\nimport { useFullScreen } from 'react-browser-hooks'\nimport notesReducer from '../reducers/notes';\nimport hideContentReducer from '../reducers/visability';\nimport NoteList from './NoteList'\nimport QuickContext from '../context/quick-context';\nimport AddNoteForm from './addNoteForm';\nimport BannerSelector from '../selectors/Banner';\nimport bannerReducer from '../reducers/banner';\nconst QuickMeeting = () => {\n    document.title = 'Lone Star Quick Meeting'\n    const fs = useFullScreen()\n    const [banner, setBanner] = useReducer(bannerReducer, OTSBanner)\n    const [notes, dispatch] = useReducer(notesReducer, [])\n    const [visable, setVisable] = useReducer(hideContentReducer,\n        JSON.parse(localStorage.getItem('visable')) ? true : JSON.parse(localStorage.getItem('visable')))\n    useEffect(() => {\n        const notes = JSON.parse(localStorage.getItem('notes'))\n        if (notes) {\n            dispatch({ type: 'POPULATE_NOTES', notes })\n        }\n    }, [])\n    useEffect(() => {\n        const visable = JSON.parse(localStorage.getItem('visable'))\n        if (visable) {\n            dispatch({ type: 'SHOW', visable })\n        }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem('visable', JSON.stringify(visable))\n    }, [visable])\n    useEffect(() => {\n        localStorage.setItem('notes', JSON.stringify(notes))\n    }, [notes]);\n    return (\n        <QuickContext.Provider value={{ \n            notes, \n            dispatch, \n            visable, \n            setVisable,\n            banner,\n            setBanner \n        }}>\n            <div className=\"NoteApp\">\n                <BannerSelector />\n                <NoteList />\n                <AddNoteForm />\n            </div>\n            <div className=\"NoteApp-bottom-left \">\n                <button\n                    className=\"Button--fullScreen\"\n                    onClick={fs.toggle}>\n                    {fs.fullScreen ? 'Exit FullScreen' : 'FullScreen'}\n                </button>\n            </div>\n        </QuickContext.Provider>\n    )\n};\nexport { QuickMeeting as default };"],"sourceRoot":""}